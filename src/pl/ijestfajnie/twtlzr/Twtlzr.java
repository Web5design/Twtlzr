/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package pl.ijestfajnie.twtlzr;

import com.google.code.uclassify.client.UClassifyClient;
import com.google.code.uclassify.client.UClassifyClientFactory;
import com.uclassify.api._1.responseschema.Classification;
import java.util.Arrays;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import twitter4j.Status;
import twitter4j.Twitter;
import twitter4j.TwitterException;
import twitter4j.TwitterFactory;
import twitter4j.UserMentionEntity;
import twitter4j.conf.ConfigurationBuilder;

/**
 *
 * @author Michciu
 */
public class Twtlzr extends javax.swing.JApplet {
    
    Twitter twttr;

    /**
     * Initializes the applet Twtlzr
     */
    @Override
    public void init() {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Twtlzr.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Twtlzr.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Twtlzr.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Twtlzr.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        twttr = new TwitterFactory(new ConfigurationBuilder().setOAuthConsumerKey("ezSV1bVunxIOCfdhPkHvSQ").setOAuthAccessTokenSecret("egLBbovEoHzDAArHBnHOaYUKvuH9FFv8MGpbqBbHzxo").setOAuthAccessToken("203029725-mXghYjGJyvUDdwYfaEArN2dmwKuMl4nVKZ6K9W6S").setOAuthConsumerSecret("jxJEvOY7DOBFKApwC6Rrfrt9yQlsurdUm1zH6Jz0").build()).getInstance();
        
        /* Create and display the applet */
        try {
            java.awt.EventQueue.invokeAndWait(new Runnable() {
                public void run() {
                    initComponents();
                }
            });
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }
    
    int classifyStatus(String str) {
        final UClassifyClientFactory factory = UClassifyClientFactory.newInstance("6WWnKIeRhaLqO6JaOBwvNlmzR0", null);
        final UClassifyClient client = factory.createUClassifyClient();
        Map<String, Classification> classifications = client.classify("uClassify", "Mood", Arrays.asList(str));
        for(String text : classifications.keySet()) {
                Classification classification = classifications.get(text);
                for (com.uclassify.api._1.responseschema.Class clazz : classification.getClazz()) {
                        System.out.println(clazz.getClassName() + ":" + clazz.getP());
                }
        }
        return 0;
    }
    
    String parseStatus(Status stat) {
        String str = stat.getText();
        UserMentionEntity[] mentioned = stat.getUserMentionEntities();
        for (UserMentionEntity mention: mentioned) {
            System.out.println(mention.getName() + " " + mention.getScreenName());
            str.replace(mention.getScreenName(), mention.getName());
        }
        System.out.println(str);
        return str;
    }
    
    Status fetchStatus(long id) {
        Status ret = null;
        try {
            ret = twttr.showStatus(id);
        } catch (TwitterException ex) {
            Logger.getLogger(Twtlzr.class.getName()).log(Level.SEVERE, null, ex);
        }
        System.out.println(ret.getText());
        return ret;
    }

    /**
     * This method is called from within the init() method to initialize the
     * form. WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        output = new javax.swing.JTextArea();
        magicalButton = new javax.swing.JButton();
        input = new javax.swing.JTextField();

        output.setColumns(20);
        output.setRows(5);
        jScrollPane2.setViewportView(output);

        magicalButton.setText("Transform");
        magicalButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                magicalButtonActionPerformed(evt);
            }
        });

        input.setText("tweet id to parse...");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE)
                    .addComponent(magicalButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(input))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(input, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(magicalButton)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void magicalButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_magicalButtonActionPerformed
        output.setText(parseStatus(fetchStatus(Long.parseLong(input.getText()))));
    }//GEN-LAST:event_magicalButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField input;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton magicalButton;
    private javax.swing.JTextArea output;
    // End of variables declaration//GEN-END:variables
}
